define({ "api": [
  {
    "type": "post",
    "url": "/auth/code",
    "title": "Sign In to Calbitica",
    "group": "Auth",
    "description": "<p>Exchanges the <code>AUTHORIZATION_CODE</code> generated by Google OAuth for <code>access_token</code> and <code>refresh_token</code>.<br><br> The user is then automatically signed up/signed in. A JSON Web Token (JWT) will be generated based on the user's profile and returned.</p>",
    "parameter": {
      "fields": {
        "Body Parameters": [
          {
            "group": "BodyParam",
            "type": "String",
            "optional": false,
            "field": "code",
            "description": "<p><code>AUTHORIZATION_CODE</code> generated by Google OAuth.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "message",
            "description": "<p>Success message</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "jwt",
            "description": "<p>JWT for access to the rest of the Calbitica API</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"message\": \"Successfully signed in to Calbitica.\",\n  \"jwt\": \"xxx.xxx.xxx\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SignInError",
            "description": "<p>Signing in to Calbitica failed. This could be due to:</p> <ul> <li>an expired/used <code>AUTHORIZATION_CODE</code> (resulting in Google's <code>invalid_grant</code> error)</li> <li>Errors saving into the database</li> <li>JWT encoding errors</li> </ul>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "400 Bad Request\n{\n  \"message\": \"Could not sign in to Calbitica\"\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/auth.js",
    "groupTitle": "Auth",
    "name": "PostAuthCode"
  },
  {
    "type": "delete",
    "url": "/calbit/:id",
    "title": "Delete a Calbit",
    "group": "Calbit",
    "description": "<p>Delete the specified Calbit from Habitica, Google Calendar, and Calbitica's database</p>",
    "parameter": {
      "fields": {
        "Path Parameters": [
          {
            "group": "PathParam",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>MongoDB ObjectID</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "message",
            "description": "<p>Success message confirming the deletion of the Calbit</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": {\n    \"message\": \"Event :title deleted.\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/calbit.js",
    "groupTitle": "Calbit",
    "name": "DeleteCalbitId"
  },
  {
    "type": "get",
    "url": "/calbit",
    "title": "Get all Calbits",
    "group": "Calbit",
    "description": "<p>Get all Calbits belonging to the user. Alternatively, get a filtered list as specified through query parameters.</p>",
    "parameter": {
      "fields": {
        "Query Parameters": [
          {
            "group": "QueryParam",
            "type": "String",
            "allowedValues": [
              "\"all\"",
              "\"true\"",
              "\"false\""
            ],
            "optional": true,
            "field": "isDump",
            "defaultValue": "false",
            "description": "<p>Whether to get only &quot;dumped&quot; Calbits (<code>isDump: true</code>), non-dump Calbits, or both dump &amp; non-dump Calbit.</p>"
          },
          {
            "group": "QueryParam",
            "type": "Boolean",
            "optional": true,
            "field": "fullSync",
            "defaultValue": "true",
            "description": "<p>Whether to do an incremental sync with Google Calendar.</p>"
          },
          {
            "group": "QueryParam",
            "type": "Date",
            "optional": true,
            "field": "start",
            "defaultValue": "today",
            "description": "<p>Select Calbits that happen on or after this date.</p>"
          },
          {
            "group": "QueryParam",
            "type": "Date",
            "optional": true,
            "field": "end",
            "defaultValue": "null",
            "description": "<p>Select Calbits that happen on or before this date.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "Array",
            "optional": false,
            "field": "data",
            "description": "<p>The list of Calbits. For a full list of each Calbit's fields, see <code>calbit-controller.js</code></p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": [Calbit]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/calbit.js",
    "groupTitle": "Calbit",
    "name": "GetCalbit"
  },
  {
    "type": "post",
    "url": "/calbit",
    "title": "Create a Calbit",
    "group": "Calbit",
    "description": "<p>Creates a Calbit in Habitica, Google Calendar, and Calbitica's database.</p>",
    "parameter": {
      "fields": {
        "Body Parameters": [
          {
            "group": "BodyParam",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>The name of the Calbit</p>"
          },
          {
            "group": "BodyParam",
            "type": "String",
            "optional": false,
            "field": "calendarID",
            "description": "<p>The Google ID of the Calendar</p>"
          },
          {
            "group": "BodyParam",
            "type": "Date|DateTime",
            "optional": false,
            "field": "start",
            "description": "<p>The start date in the ISO format, i.e. <code>YYYY-MM-DDTHH:mm:ssZ</code>. All dates are assumed to be in UTC timezone.</p>"
          },
          {
            "group": "BodyParam",
            "type": "Date|DateTime",
            "optional": false,
            "field": "end",
            "description": "<p>The end date in the ISO format, i.e. <code>YYYY-MM-DDTHH:mm:ssZ</code>. All dates are assumed to be in UTC timezone.</p>"
          },
          {
            "group": "BodyParam",
            "type": "Boolean",
            "optional": false,
            "field": "allDay",
            "description": "<p>Whether it'll be added as an all-day event in Google Calendar.</p>"
          },
          {
            "group": "BodyParam",
            "type": "Boolean",
            "optional": false,
            "field": "isDump",
            "description": "<p>Whether it's a dumped Calbit.</p>"
          },
          {
            "group": "BodyParam",
            "type": "Boolean",
            "optional": false,
            "field": "display",
            "description": "<p>Whether the Calbit will be included in GetCalbit results. This should be the same as the Calendar's <code>sync</code> state.</p>"
          },
          {
            "group": "BodyParam",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Calbit</p>"
          },
          {
            "group": "BodyParam",
            "type": "String",
            "optional": true,
            "field": "location",
            "description": "<p>Location of the Calbit</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "message",
            "description": "<p>Success message confirming the creation of the Calbit</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": {\n    \"message\": \"Event :title created\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/calbit.js",
    "groupTitle": "Calbit",
    "name": "PostCalbit"
  },
  {
    "type": "put",
    "url": "/calbit/:id",
    "title": "Update a Calbit",
    "group": "Calbit",
    "description": "<p>Updates a Calbit in Habitica, Google Calendar, and Calbitica's database.</p>",
    "parameter": {
      "fields": {
        "Path Parameters": [
          {
            "group": "PathParam",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>MongoDB ObjectID</p>"
          }
        ],
        "Body Parameters": [
          {
            "group": "BodyParam",
            "type": "String",
            "optional": false,
            "field": "title",
            "description": "<p>The name of the Calbit</p>"
          },
          {
            "group": "BodyParam",
            "type": "String",
            "optional": false,
            "field": "calendarID",
            "description": "<p>The Google ID of the Calendar</p>"
          },
          {
            "group": "BodyParam",
            "type": "String",
            "optional": false,
            "field": "googleID",
            "description": "<p>The Google ID of the Calendar <strong>Event</strong></p>"
          },
          {
            "group": "BodyParam",
            "type": "Date|DateTime",
            "optional": false,
            "field": "start",
            "description": "<p>The start date in the ISO format, i.e. <code>YYYY-MM-DDTHH:mm:ssZ</code>. All dates are assumed to be in UTC timezone.</p>"
          },
          {
            "group": "BodyParam",
            "type": "Date|DateTime",
            "optional": false,
            "field": "end",
            "description": "<p>The end date in the ISO format, i.e. <code>YYYY-MM-DDTHH:mm:ssZ</code>. All dates are assumed to be in UTC timezone.</p>"
          },
          {
            "group": "BodyParam",
            "type": "Boolean",
            "optional": false,
            "field": "allDay",
            "description": "<p>Whether it'll be added as an all-day event in Google Calendar.</p>"
          },
          {
            "group": "BodyParam",
            "type": "Boolean",
            "optional": true,
            "field": "isDump",
            "description": "<p>Whether it's a dumped Calbit.</p>"
          },
          {
            "group": "BodyParam",
            "type": "Boolean",
            "optional": true,
            "field": "display",
            "description": "<p>Whether the Calbit will be included in GetCalbit results. This should be the same as the Calendar's <code>sync</code> state.</p>"
          },
          {
            "group": "BodyParam",
            "type": "String",
            "optional": true,
            "field": "description",
            "description": "<p>Description of the Calbit</p>"
          },
          {
            "group": "BodyParam",
            "type": "String",
            "optional": true,
            "field": "location",
            "description": "<p>Location of the Calbit</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "message",
            "description": "<p>Success message confirming the update of the Calbit</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": {\n    \"message\": \"Event updated\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/calbit.js",
    "groupTitle": "Calbit",
    "name": "PutCalbitId"
  },
  {
    "type": "put",
    "url": "/calbit/:id/complete",
    "title": "Update Calbit's completion status",
    "group": "Calbit",
    "description": "<p>Update the completion status of the specified Calbit</p>",
    "parameter": {
      "fields": {
        "Path Parameters": [
          {
            "group": "PathParam",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>MongoDB ObjectID</p>"
          }
        ],
        "Body Parameters": [
          {
            "group": "BodyParam",
            "type": "Boolean",
            "optional": false,
            "field": "status",
            "description": "<p>Completion status of the Calbit</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "message",
            "description": "<p>Success message confirming the completion of the Calbit</p>"
          },
          {
            "group": "Success 200",
            "type": "Object",
            "optional": false,
            "field": "stats",
            "description": "<p>The user's new stats (HP, MP, XP, etc.) as returned from Habitica</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": {\n    \"message\": \":title is now complete/incomplete\",\n    \"stats\": { TODO }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/calbit.js",
    "groupTitle": "Calbit",
    "name": "PutCalbitIdComplete"
  },
  {
    "type": "get",
    "url": "/cal",
    "title": "Get all Calendars",
    "group": "Calendar",
    "description": "<p>Gets all of the user's calendars from Calbitica's database</p> <ul> <li>including non-synced calendars</li> </ul>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "Calendar[]",
            "description": "<p>A list of Calendars. TODO: Restrict fields returned</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": [Calendar]\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/calendar.js",
    "groupTitle": "Calendar",
    "name": "GetCal"
  },
  {
    "type": "get",
    "url": "/cal/import",
    "title": "Import Events as Calbits",
    "group": "Calendar",
    "description": "<p>Import user's GCal events (belonging to synced calendars only) to Calbitica's database as Calbits.</p>",
    "parameter": {
      "fields": {
        "Query Parameters": [
          {
            "group": "QueryParam",
            "type": "Boolean",
            "optional": true,
            "field": "fullSync",
            "defaultValue": "true",
            "description": "<p>Whether to do an incremental sync with Google Calendar</p>"
          },
          {
            "group": "QueryParam",
            "type": "Date",
            "optional": true,
            "field": "start",
            "defaultValue": "today",
            "description": "<p>Import Google Calendar Events that happen on or after this date.</p>"
          },
          {
            "group": "QueryParam",
            "type": "Date",
            "optional": true,
            "field": "end",
            "defaultValue": "null",
            "description": "<p>Import Google Calendar Events that happen on or before this date.</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": true,
            "field": "Object",
            "description": "<p>A summary of how many events were updated, created, and deleted</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": {\n     \"success\": { updates: Number, deletes: Number, creates: Number },\n     \"failure\": { updates: Number, deletes: Number, creates: Number }\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/calendar.js",
    "groupTitle": "Calendar",
    "name": "GetCalImport"
  },
  {
    "type": "get",
    "url": "/cal/sync/:id",
    "title": "Update Calendar's sync status",
    "group": "Calendar",
    "description": "<p>Change the 'sync' property of the specified calendar. Affects whether:</p> <ul> <li>the Calendar's events will be included during Google Calendar imports,</li> <li>the Calendar's Calbits will be displayed (included) when getting all Calbits</li> </ul>",
    "parameter": {
      "fields": {
        "Path Parameters": [
          {
            "group": "PathParam",
            "type": "String",
            "optional": true,
            "field": "id",
            "description": "<p>MongoDB ObjectID of the Calendar</p>"
          }
        ],
        "Query Parameters": [
          {
            "group": "QueryParam",
            "type": "Boolean",
            "optional": true,
            "field": "sync",
            "description": "<p>Whether the Calendar should be synced</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "message",
            "description": "<p>A success message confirming the sync status of the Calendar</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": {\n     \"message\": \"TODO\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/calendar.js",
    "groupTitle": "Calendar",
    "name": "GetCalSyncId"
  },
  {
    "type": "get",
    "url": "/h/profile",
    "title": "Get Habitica Profile",
    "group": "Habitica",
    "description": "<p>Get a user's Habitica Profile. Includes stats and party information.</p>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "TODO",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": {\n     TODO\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/habitica.js",
    "groupTitle": "Habitica",
    "name": "GetHProfile"
  },
  {
    "type": "get",
    "url": "/h/sleep",
    "title": "Toggle Sleep Status",
    "group": "Habitica",
    "description": "<p>Toggles the user's sleep status in Habitica.</p> <ul> <li><strong>Sleep/Rested in Tavern/Checked into Tavern</strong> - Damage from Dailies is paused<br></li> <li><strong>Not asleep/Left the Tavern</strong> - Damage from Dailies is resumed</li> </ul>",
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "message",
            "description": "<p>Success message confirming the update of the user's sleep status</p>"
          },
          {
            "group": "Success 200",
            "type": "Boolean",
            "optional": false,
            "field": "sleep",
            "description": "<p>Whether the user is asleep</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": {\n    \"message\": \"You're resting in the Inn. Damage is paused.\",\n    \"sleep\": true\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/habitica.js",
    "groupTitle": "Habitica",
    "name": "GetHSleep"
  },
  {
    "type": "get",
    "url": "/h/sync",
    "title": "Import Habitica Tasks",
    "group": "Habitica",
    "description": "<p>Import a user's tasks from Habitica as &quot;dumped&quot; Calbits. Google Calendar events will not be created until the user assigns the Calbit to a specific date-time.</p>",
    "parameter": {
      "fields": {
        "Query Parameters": [
          {
            "group": "QueryParam",
            "type": "String",
            "allowedValues": [
              "\"habits\"",
              "\"dailys\"",
              "\"todos\"",
              "\"rewards\"",
              "\"completedTodos\""
            ],
            "optional": true,
            "field": "type",
            "description": "<p>The type of Habitica tasks to import</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "TODO",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": {\n     TODO\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/habitica.js",
    "groupTitle": "Habitica",
    "name": "GetHSync"
  },
  {
    "type": "post",
    "url": "/h/quest",
    "title": "Accept/Decline a Quest invitation",
    "group": "Habitica",
    "description": "<p>Accept or Decline the current quest invitation.</p>",
    "parameter": {
      "fields": {
        "Body Parameters": [
          {
            "group": "BodyParam",
            "type": "Boolean",
            "optional": false,
            "field": "accept",
            "description": "<p>Whether to accept or decline the quest invitation</p>"
          },
          {
            "group": "BodyParam",
            "type": "String",
            "optional": false,
            "field": "groupID",
            "description": "<p>User's Party ID</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "TODO",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"data\": {\n     TODO\n  }\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "SomeError",
            "description": "<p>TODO</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "WILL BE DOCUMENTED SOON",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/habitica.js",
    "groupTitle": "Habitica",
    "name": "PostHQuest"
  },
  {
    "type": "post",
    "url": "/settings/habitica",
    "title": "Save Habitica Settings",
    "group": "Settings",
    "description": "<p>Saves the user's Habitica API Key and/or User ID into the database. The database field will only be updated if a non-empty value is passed.<br><br> <strong>Store the new JSON Web Token (JWT)</strong> returned by this endpoint.</p>",
    "parameter": {
      "fields": {
        "Body Parameters": [
          {
            "group": "BodyParam",
            "type": "String",
            "optional": true,
            "field": "apiKey",
            "description": "<p>User's Habitica API Key</p>"
          },
          {
            "group": "BodyParam",
            "type": "String",
            "optional": true,
            "field": "hUserID",
            "description": "<p>User's Habitica UserID</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "message",
            "description": "<p>Success message confirming the deletion of the Calbit</p>"
          },
          {
            "group": "Success 200",
            "type": "String",
            "optional": false,
            "field": "jwt",
            "description": "<p>JWT for access to the rest of the Calbitica API</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success Response:",
          "content": "200 OK\n{\n  \"message\": \"Successfully signed in to Calbitica.\",\n  \"jwt\": \"xxx.xxx.xxx\"\n}",
          "type": "json"
        }
      ]
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "ParseError",
            "description": "<p>Happens when jwt is malformed/invalid</p>"
          },
          {
            "group": "Error 4xx",
            "optional": false,
            "field": "DatabaseError",
            "description": "<p>Happens when input is malformed</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Error Response:",
          "content": "400 Bad Request\n{\n  \"message\": \"jwt malformed\"\n}",
          "type": "json"
        },
        {
          "title": "Error Response:",
          "content": "400 Bad Request\n{\n  \"data\": {\n    \"message\": \"Could not save Habitica settings\"\n  }\n}",
          "type": "json"
        }
      ]
    },
    "version": "0.0.0",
    "filename": "routes/api/settings.js",
    "groupTitle": "Settings",
    "name": "PostSettingsHabitica"
  }
] });
