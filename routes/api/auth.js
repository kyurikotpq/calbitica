const router = require('express').Router();

const authController = require('../../controllers/auth-controller');

/**
 * @api {post} /auth/code Sign In to Calbitica
 * @apiGroup Auth
 * @apiDescription Exchanges the <code>AUTHORIZATION_CODE</code> generated by Google OAuth
 * for <code>access_token</code> and <code>refresh_token</code>.<br><br>
 * The user is then automatically signed up/signed in. 
 * A JSON Web Token (JWT) will be generated based on 
 * the user's profile and returned.
 * 
 * @apiParam (BodyParam) {String} code <code>AUTHORIZATION_CODE</code> generated by Google OAuth.
 * 
 * @apiSuccess {String} message Success message
 * @apiSuccess {String} jwt JWT for access to the rest of the Calbitica API
 * @apiSuccessExample Success Response:
 *     200 OK
 *     {
 *       "message": "Successfully signed in to Calbitica.",
 *       "jwt": "xxx.xxx.xxx"
 *     }
 * 
 * @apiError SignInError Signing in to Calbitica failed. This could be due to:
 * - an expired/used <code>AUTHORIZATION_CODE</code> (resulting in Google's <code>invalid_grant</code> error)
 * - Errors saving into the database
 * - JWT encoding errors
 * @apiErrorExample Error Response:
 *     400 Bad Request
 *     {
 *       "message": "Could not sign in to Calbitica"
 *     }
 */
router.post('/code', (req, res) => {
    let code = req.body.code;
    authController.tokensFromAuthCode(code)
        .then((jwt) => res.status(200).json({
            message: "Successfully signed in to Calbitica.",
            jwt
        }))
        .catch(err => res.status(400).json({
            message: "Could not sign in to Calbitica"
        }));
})

module.exports = router;